---
title: "Report"
editor: source
authors: 
  - "Michelle Qin"
  - "Chuyi Sun"
  - "Jiayi Xue"
date: "`r Sys.Date()`"
format:
  html:
    self-contained: true
    page-layout: full
    toc: true
    toc-location: right
    toc-depth: 5
    code-fold: true
execute:
  cache: false
  warning: false
editor_options: 
  chunk_output_type: console
---

```{r package, echo=FALSE}
library(tidyverse)
library(haven)
library(data.table)
library(here)
library(table1)
```


# Introduction

Short- and long-term patient outcomes from spontaneous intracerebral hemorrhage (sICH) may depend on patient-care variability. We would like to develop an ICH-specific therapy intensity level (TIL) metric using evidence-based elements. The previous version of TIL, developed in 2015 from an international dataset of ICH patients, is a sum of binary indicators of control of blood pressure, glucose, fever, herniation, elevated intracranial pressure events and hypotension. The outcome is binarized modified Rankin score (mRS) at day 30. We would like to evaluate how best to create the TIL metric with weighted values (that reflect relative importance of the binary indicators) as needed.


# Data Description

**Outcome variable:**

Binarized mRS (modified Rankin score), representing patients’ functional abilities after a stroke, measured 30 days after (surgical or “standard of care”) treatment. A mRS of 0-3 is coded as 1, and a mRS of 4-6 (severe impairment or death) is coded as 0.


**Independent Variables:**

- Predictors: Baseline and 7-day measures of control of blood pressure, glucose, fever, herniation, elevated intracranial pressure events and hypotension. 

- Possible other predictors: age, Glasgow Coma Scale (GCS) at baseline, NIH stroke scale (NIHSS) at baseline, stable Intracerebral and Intraventricular volumes, end of surgical evacuation ICH volume <15 mL (i.e., whether patients who had surgery had successful removal of blood clot), and deep ICH location. We will adjust these variables in our model.

- Clustering variables: Site (78 values) and continent (3 values: North America vs. Europe vs. Australia-Asia).


```{r}
# merge and subset vars
patients <- haven::read_dta(here::here("data/private/M3_data_499_TIL.dta"))
sites <- haven::read_dta(here::here("data/private/M3_TIL_added_data.dta"))

## Extract variables of interest and Merge ----
source(here::here("code/helper-functions.R"))
sites_subset <- subset(sites, select = c("new_id", cluster_vars))
patients_subset <- subset(patients, select = c("patientnum_ninds", stratifying_vars, predictor_vars, outcome_var))
data_merged <- merge(sites_subset, patients_subset, by.x = "new_id", by.y = "patientnum_ninds") # "new_id" is kept as a column

## Exclude observations with missing outcome ----
data_analysis <- subset(data_merged, subset = !is.na(data_merged$glasgow_rankin_0_3_30)) # exclude 6 observations with missing outcome

```


## Missingness


```{r}

## Check missingness ----

# verify that variables with 12 NAs are missing the same observations (yes)
# missing_indices <- list()
# for (var in colnames(data_analysis)){
#   if (sum(is.na(data_analysis[[var]])) == 12){
#     missing_indices[[var]] <- which(is.na(data_analysis[[var]]))
#   }
# }

# # check number of missing values in each predictor (mostly 0, Baseline_ICP and Baseline_herniation have 1, eot_less_15, 8 have the same 12 missing)
# missing_indices <- list()
# for (var in colnames(data_analysis)){
#   missing_indices[[var]] <- sum(is.na(data_analysis[[var]]))
# }
# View(missing_indices)

# missing_d7 <- data_analysis[which(is.na(data_analysis$Day7NEWscore_BP)), ]
# missing_d7$sitename # looks random, not systematic --> okay to impute during modeling

# check which patients have any missing covariate
n_complete <- sum(complete.cases(data_analysis)) # 477, which means there are 16 patients with at least 1 missing covariate
n_missing <- nrow(data_analysis) - n_complete

# id_of_missing <- vector()
# n_missing_covariates <- vector()
# for (i in 1:nrow(data_analysis)){
#   if (sum(is.na(data_analysis[i, ])) > 0){
#     id_of_missing <- append(id_of_missing, data_analysis$new_id[i])
#     n_missing_covariates <- append(n_missing_covariates, sum(is.na(data_analysis[i, ])))
#     print(i)
#     print(colnames(data_analysis)[which(is.na(data_analysis[i, ]))])
#   }
# }
# patients_with_missing <- data.frame(new_id = id_of_missing,
                                    # n_missing_covariates = n_missing_covariates)
```



There were 499 patients in the original dataset.  First, we will exclude the 6 patients with missing outcome data from our analysis. Then, there are 16 patients with missing covariate data, which is less than 4% of the dataset, so we will proceed with a complete-case analysis. As a result, 477 patients were included in the downstream analysis.

## Patients Characteristics

**!!!!!!!!!!!variable clarification?**

**make sure the labels are correct.**

**what's the meaning for each level?**

```{r}
# descriptive analysis
complete_df <- drop_na(data_analysis)

# convert predictor variables + eot_less_15 to factors 
factor_index_start <- which(names(complete_df) == "eot_less_15")
complete_df[, factor_index_start:ncol(complete_df)] <- lapply(
  complete_df[, factor_index_start:ncol(complete_df)], factor
)
levels(complete_df$glasgow_rankin_0_3_30) <- c("4-6", "0-3")
# str(complete_df)

# Define labels for each variable
label(complete_df$age_at_consent) <- "Age(years)"
label(complete_df$gcs_randomization) <- "Glasgow Coma Scale (GCS) at Baseline"
label(complete_df$nihss_randomization) <- "NIH Stroke Scale (NIHSS) at Baseline"
label(complete_df$stabct_ich_volume) <- "Stable Intracerebral Volumes (mL)"
label(complete_df$stabct_ivh_volume) <- "Stable Intraventricular Volumes (mL)"
label(complete_df$eot_less_15) <- "End of Surgical Evacuation ICH Volume <15 mL"
label(complete_df$ich_deep_location) <- "Deep ICH Location"
label(complete_df$BaselineNEWscore_BP) <- "Baseline Hypertention Levels"
label(complete_df$Day7NEWscore_BP) <- "Day 7 Hypertention Levels"
label(complete_df$Baseline_BP_control) <- "Baseline Blood Pressure Control Levels"
label(complete_df$D7_BP_control) <- "Day 7 Blood Pressure Control Levels"
label(complete_df$Baseline_Hypotension) <- "Baseline Hypotention Levels"
label(complete_df$D7_Hypotension) <- "Day 7 Hypotention Levels"
label(complete_df$Baseline_Hyperpyrexia) <-  "Baseline Body Temperature Levels"
label(complete_df$D7_Hyperpyrexia) <- "Day 7 Body Temperature Levels"
label(complete_df$Baseline_Hyperglycemia) <- "Baseline Glucose Levels"
label(complete_df$D7_Hyperglycemia) <- "Day 7 Glucose Levels"
label(complete_df$Baseline_ICP) <- "Baseline Intracranial Pressure Levels"
label(complete_df$D7_ICP) <- "Day 7 Intracranial Pressure Levels"
label(complete_df$Baseline_herniation) <- "Baseline Clinical Herniation Reversal" #?
label(complete_df$D7_herniation) <- "Day 7 Clinical Herniation Reversal" #?
label(complete_df$Baseline_INR) <- "Baseline International Normalized Ratio (INR)" #?
label(complete_df$D7_INR) <- "Day 7 International Normalized Ratio (INR)"
label(complete_df$D7_DNR) <- "Day 7 Do not Resuscitate"
label(complete_df$glasgow_rankin_0_3_30) <-"Day 30 Binarized mRS after Treatment"
label(complete_df$site_continent) <- "Continent"

caption <- "Demographic Clinical Characteristics of Patients"
footnote <- "mRS modified Rankin score"
table1::table1(~ . | site_continent,
               # labels = var_labels,
       data = complete_df[, !(names(complete_df) %in% c("new_id", "sitename"))],
       caption = caption,
       caption.placement = "top",
       footnote = footnote,
       topclass="Rtable1-zebra")

```

For all variables, higher scores denote increased severity and need for treatment, i.e. increased therapy intensity level.

# Methods

## Splitting Data

<!-- **??use dataset after removing NAs?** Yes -->

We will randomly split the full dataset into approximately 20% “held-out” test data and 80% training data within each continent group.

```{r}
## Set seed and split data ----
set.seed(643)
# randomly sample 62 sites (approx 80% of 78 total sites) for train and validation dataset, WITHIN CONTINENT GROUPS
sites <- unique(complete_df[, c("sitename", "site_continent")])
train_valid_sites <- dplyr::slice_sample(sites, by = site_continent, prop = 0.8)
train_valid <- complete_df[complete_df$sitename %in% train_valid_sites$sitename, ]
test <- complete_df[!(complete_df$sitename %in% train_valid_sites$sitename), ]
# rm(sites, train_valid_sites)

```

Now look at the clinical characteristics of patients within training data and testing data.

```{r}
train_index <- which(complete_df$sitename %in% train_valid_sites$sitename)
complete_df$type <- rep("Testing Data", nrow(complete_df))
complete_df$type[train_index] <- "Training Data"

caption <- "Demographic Clinical Characteristics of Patients"
footnote <- "mRS modified Rankin score"
table1::table1(~ . | type,
               # labels = var_labels,
       data = complete_df[, !(names(complete_df) %in% c("new_id", "sitename"))],
       caption = caption,
       caption.placement = "top",
       footnote = footnote,
       topclass="Rtable1-zebra")
```


## Model Fitting

...

# Results

# Conclusion

# Discussion